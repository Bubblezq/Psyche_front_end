{"remainingRequest":"D:\\Documents\\GitHub\\Psyche\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Documents\\GitHub\\Psyche\\front-end\\src\\views\\staff\\staffManage.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\src\\views\\staff\\staffManage.vue","mtime":1575191329660},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\node_modules\\css-loader\\index.js","mtime":1573722966629},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1573725517685},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\node_modules\\postcss-loader\\src\\index.js","mtime":1573722998988},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573722996621},{"path":"D:\\Documents\\GitHub\\Psyche\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1573725517685}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.dynamic-delete-button {\n  cursor: pointer;\n  position: relative;\n  top: 4px;\n  font-size: 24px;\n  color: #999;\n  transition: all 0.3s;\n}\n.dynamic-delete-button:hover {\n  color: #777;\n}\n.dynamic-delete-button[disabled] {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n",{"version":3,"sources":["staffManage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"staffManage.vue","sourceRoot":"src/views/staff","sourcesContent":["<template>\n  <a-form :form=\"form\" @submit=\"handleSubmit\">\n    <a-form-item\n      v-for=\"(k, index) in form.getFieldValue('keys')\"\n      :key=\"k\"\n      v-bind=\"index === 0 ? formItemLayout : formItemLayoutWithOutLabel\"\n      :label=\"index === 0 ? 'Passengers' : ''\"\n      :required=\"false\"\n    >\n      <a-input\n        v-decorator=\"[\n          `names[${k}]`,\n          {\n            validateTrigger: ['change', 'blur'],\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: 'Please input passenger\\'s name or delete this field.',\n              },\n            ],\n          },\n        ]\"\n        placeholder=\"passenger name\"\n        style=\"width: 60%; margin-right: 8px\"\n      />\n      <a-icon\n        v-if=\"form.getFieldValue('keys').length > 1\"\n        class=\"dynamic-delete-button\"\n        type=\"minus-circle-o\"\n        :disabled=\"form.getFieldValue('keys').length === 1\"\n        @click=\"() => remove(k)\"\n      />\n    </a-form-item>\n    <a-form-item v-bind=\"formItemLayoutWithOutLabel\">\n      <a-button type=\"dashed\" style=\"width: 60%\" @click=\"add\">\n        <a-icon type=\"plus\" /> Add field\n      </a-button>\n    </a-form-item>\n    <a-form-item v-bind=\"formItemLayoutWithOutLabel\">\n      <a-button type=\"primary\" html-type=\"submit\">\n        Submit\n      </a-button>\n    </a-form-item>\n  </a-form>\n</template>\n\n<script>\nlet id = 0;\nexport default {\n  data() {\n    return {\n      formItemLayout: {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 4 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 20 },\n        },\n      },\n      formItemLayoutWithOutLabel: {\n        wrapperCol: {\n          xs: { span: 24, offset: 0 },\n          sm: { span: 20, offset: 4 },\n        },\n      },\n    };\n  },\n  beforeCreate() {\n    this.form = this.$form.createForm(this, { name: 'dynamic_form_item' });\n    this.form.getFieldDecorator('keys', { initialValue: [], preserve: true });\n  },\n  methods: {\n    remove(k) {\n      const { form } = this;\n      // can use data-binding to get\n      const keys = form.getFieldValue('keys');\n      // We need at least one passenger\n      if (keys.length === 1) {\n        return;\n      }\n\n      // can use data-binding to set\n      form.setFieldsValue({\n        keys: keys.filter(key => key !== k),\n      });\n    },\n\n    add() {\n      const { form } = this;\n      // can use data-binding to get\n      const keys = form.getFieldValue('keys');\n      const nextKeys = keys.concat(id++);\n      // can use data-binding to set\n      // important! notify form to detect changes\n      form.setFieldsValue({\n        keys: nextKeys,\n      });\n    },\n\n    handleSubmit(e) {\n      e.preventDefault();\n      this.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    },\n  },\n};\n</script>\n<style>\n.dynamic-delete-button {\n  cursor: pointer;\n  position: relative;\n  top: 4px;\n  font-size: 24px;\n  color: #999;\n  transition: all 0.3s;\n}\n.dynamic-delete-button:hover {\n  color: #777;\n}\n.dynamic-delete-button[disabled] {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n</style>"]}]}