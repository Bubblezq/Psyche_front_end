{"remainingRequest":"D:\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\front-end\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\front-end\\src\\App.vue","mtime":1576616390808},{"path":"D:\\front-end\\node_modules\\css-loader\\index.js","mtime":1573722966629},{"path":"D:\\front-end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1573725517685},{"path":"D:\\front-end\\node_modules\\postcss-loader\\src\\index.js","mtime":1573722998988},{"path":"D:\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573722996621},{"path":"D:\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1573725517685}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#app {\n  height: 100%;\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <a-locale-provider :locale=\"locale\">\n    <div id=\"app\">\n      <router-view v-if=\"isRouterAlive\"></router-view>\n    </div>\n  </a-locale-provider>\n</template>\n\n<script>\nimport zhCN from 'ant-design-vue/lib/locale-provider/zh_CN'\nimport { AppDeviceEnquire } from '@/utils/mixin'\n\nexport default {\n  mixins: [AppDeviceEnquire],\n  provide(){\n      return{\n          reload: this.reload\n      }\n  },\n  data () {\n    return {\n      locale: zhCN,\n      isRouterAlive: true\n    }\n  },\n    created () {\n        //在页面加载时读取sessionStorage里的状态信息\n        if (sessionStorage.getItem(\"store\") ) {\n            this.$store.replaceState(Object.assign({}, this.$store.state,JSON.parse(sessionStorage.getItem(\"store\"))));\n            sessionStorage.removeItem('store');\n        }\n\n        //在页面刷新时将vuex里的信息保存到sessionStorage里\n        window.addEventListener(\"beforeunload\",()=>{\n            sessionStorage.setItem(\"store\",JSON.stringify(this.$store.state))\n        })\n    },\n  methods:{\n    reload (){\n     this.isRouterAlive = false\n     this.$nextTick(() => (this.isRouterAlive = true))\n    },\n  },\n  mounted () {\n\n  }\n}\n</script>\n<style>\n  #app {\n    height: 100%;\n  }\n</style>\n"]}]}